{"version":3,"file":"js/601.97a4069c.chunk.js","mappings":"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","sources":["webpack://react_game/./src/constants/ticTacToe.ts","webpack://react_game/./src/pages/Home/reducer.ts","webpack://react_game/./src/pages/Home/type.ts","webpack://react_game/./src/pages/Home/InfoSection.tsx","webpack://react_game/./src/assets/circle.svg","webpack://react_game/./src/assets/close.svg","webpack://react_game/./src/pages/Home/style.tsx","webpack://react_game/./src/pages/Home/index.tsx"],"sourcesContent":["export const WIN_STATUS_LIST = [\n  // 橫線\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  // 直線\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9],\n  // 斜線\n  [1, 5, 9],\n  [3, 5, 7],\n];\n\nexport const T = 1;\n","import { produce } from 'immer';\nimport { Socket } from 'socket.io-client';\nimport { WIN_STATUS_LIST } from '@/constants/ticTacToe';\n\nexport enum RolesEnum {\n  PLAYER_ONE,\n  PLAYER_TWO,\n}\n\nexport type DispatchActionType =\n  | { type: 'RESTART_GAME' }\n  | { type: 'SET_PLAYER_ONE_CHESS'; payload: number }\n  | { type: 'SET_PLAYER_TWO_CHESS'; payload: number }\n  | { type: 'SET_ROLE'; payload: RolesEnum }\n  | { type: 'CHANGE_MODE'; payload: ModeType }\n  | { type: 'SET_SOCKET'; payload: Socket };\n\ntype ModeType = 'single' | 'multi';\n\ntype TicTacToeType = {\n  playOneChess: number[];\n  playTwoChess: number[];\n  playOneRemainSteps: number[][];\n  playTwoRemainSteps: number[][];\n  currentRole: RolesEnum;\n  currentRound: RolesEnum;\n  isPlayerOneWin: boolean;\n  isPlayerTwoWin: boolean;\n  isGameEnd: boolean;\n  mode: ModeType;\n  ws: Socket | null;\n};\n\nexport const ticTacToeInitState: TicTacToeType = {\n  currentRole: RolesEnum.PLAYER_ONE,\n  currentRound: RolesEnum.PLAYER_ONE,\n  playOneChess: [],\n  playTwoChess: [],\n  playOneRemainSteps: [],\n  playTwoRemainSteps: [],\n  isPlayerOneWin: false,\n  isPlayerTwoWin: false,\n  isGameEnd: false,\n  mode: 'single',\n  ws: null,\n};\n\nconst getRemainSteps = (chesses: number[]) => {\n  return WIN_STATUS_LIST.map((winStatus) => {\n    return winStatus.filter((chessNumber) => !chesses.includes(chessNumber));\n  });\n};\n\nconst isSomeoneWin = (remainSteps: number[][]) => {\n  return remainSteps.some((steps) => steps.length === 0);\n};\n\nexport const reducer = produce(\n  (draft: TicTacToeType, action: DispatchActionType) => {\n    switch (action.type) {\n      case 'SET_PLAYER_ONE_CHESS': {\n        draft.playOneChess.push(action.payload);\n        draft.playOneRemainSteps = getRemainSteps(draft.playOneChess);\n        draft.isPlayerOneWin = isSomeoneWin(draft.playOneRemainSteps);\n        draft.isGameEnd = draft.isPlayerOneWin;\n        draft.currentRound = RolesEnum.PLAYER_TWO;\n        if (draft.mode !== 'multi') {\n          draft.currentRole = RolesEnum.PLAYER_TWO;\n        }\n        break;\n      }\n      case 'SET_PLAYER_TWO_CHESS': {\n        draft.playTwoChess.push(action.payload);\n        draft.playTwoRemainSteps = getRemainSteps(draft.playTwoChess);\n        draft.isPlayerTwoWin = isSomeoneWin(draft.playTwoRemainSteps);\n        draft.isGameEnd = draft.isPlayerTwoWin;\n        draft.currentRound = RolesEnum.PLAYER_ONE;\n        if (draft.mode !== 'multi') {\n          draft.currentRole = RolesEnum.PLAYER_ONE;\n        }\n        break;\n      }\n      case 'SET_ROLE': {\n        draft.currentRole = action.payload;\n        break;\n      }\n      case 'CHANGE_MODE': {\n        draft.mode = action.payload;\n        break;\n      }\n      case 'RESTART_GAME': {\n        draft.playOneChess = [];\n        draft.playTwoChess = [];\n        draft.playOneRemainSteps = [];\n        draft.playTwoRemainSteps = [];\n        draft.isPlayerOneWin = false;\n        draft.isPlayerTwoWin = false;\n        draft.isGameEnd = false;\n        // Object.assign(draft, {\n        //   ...ticTacToeInitState,\n        //   mode: draft.mode,\n        //   ws: draft.ws,\n        // });\n        break;\n      }\n      case 'SET_SOCKET': {\n        draft.ws = action.payload;\n        break;\n      }\n      default:\n        break;\n    }\n  },\n);\n","import { RolesEnum } from './reducer';\n\nexport type JoinRoomParams = {\n  isSuccess: boolean;\n  playerIndex?: RolesEnum;\n};\n\nexport type ChessDownParams = {\n  chessIndex: number;\n  playerIndex: RolesEnum;\n};\nexport type InfoSectionProps = {\n  currentRole: RolesEnum;\n  currentRound: RolesEnum;\n  winStatus: StatusEnum;\n  isGameOver: boolean;\n};\nexport enum StatusEnum {\n  IS_GAME_PROCESSING = 'IS_GAME_PROCESSING',\n  PLAYER_ONE_WIN = 'PLAYER_ONE_WIN',\n  PLAYER_TWO_WIN = 'PLAYER_TWO_WIN',\n  IS_TIE = 'IS_TIE',\n}\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { InfoSectionProps, StatusEnum } from './type';\n\nfunction InfoSection({\n  currentRole,\n  winStatus,\n  currentRound,\n}: InfoSectionProps) {\n  const description = useMemo(() => {\n    const isSelf = currentRole === currentRound;\n    const roleName = isSelf ? '您' : '對方';\n    const isTie = winStatus === StatusEnum.IS_TIE;\n    const isSomeoneWin =\n      winStatus === StatusEnum.PLAYER_ONE_WIN ||\n      winStatus === StatusEnum.PLAYER_TWO_WIN;\n    if (isTie) return '遊戲結束：平手';\n    if (isSomeoneWin) {\n      return `遊戲結束，${isSelf ? '恭喜' : ''}${roleName}獲勝`;\n    }\n    return `輪到${roleName}選擇`;\n  }, [currentRole, winStatus, currentRound]);\n\n  return (\n    <StyledInfoText>\n      <StyledTitle>圈圈叉叉小遊戲</StyledTitle>\n      {description}\n    </StyledInfoText>\n  );\n}\n\nexport default InfoSection;\n\nconst StyledInfoText = styled.div`\n  color: #121212;\n  font-size: 20px;\n  text-align: center;\n  margin-bottom: 20px;\n`;\nconst StyledTitle = styled.h1`\n  font-size: 24px;\n  text-align: center;\n  margin: 10px 0;\n`;\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nconst SvgCircle = (_ref, ref) => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\"\n  })));\n};\nconst ForwardRef = /*#__PURE__*/forwardRef(SvgCircle);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"5cfe7dbbb2266e223e77adc22b898a52.svg\";","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nconst SvgClose = (_ref, ref) => {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 492 492\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M300.188,246L484.14,62.04c5.06-5.064,7.852-11.82,7.86-19.024c0-7.208-2.792-13.972-7.86-19.028L468.02,7.872 c-5.068-5.076-11.824-7.856-19.036-7.856c-7.2,0-13.956,2.78-19.024,7.856L246.008,191.82L62.048,7.872    c-5.06-5.076-11.82-7.856-19.028-7.856c-7.2,0-13.96,2.78-19.02,7.856L7.872,23.988c-10.496,10.496-10.496,27.568,0,38.052    L191.828,246L7.872,429.952c-5.064,5.072-7.852,11.828-7.852,19.032c0,7.204,2.788,13.96,7.852,19.028l16.124,16.116    c5.06,5.072,11.824,7.856,19.02,7.856c7.208,0,13.968-2.784,19.028-7.856l183.96-183.952l183.952,183.952    c5.068,5.072,11.824,7.856,19.024,7.856h0.008c7.204,0,13.96-2.784,19.028-7.856l16.12-16.116    c5.06-5.064,7.852-11.824,7.852-19.028c0-7.204-2.792-13.96-7.852-19.028L300.188,246z\"\n  })));\n};\nconst ForwardRef = /*#__PURE__*/forwardRef(SvgClose);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"71b6ba4cbd8ee014d96aacc515d8ec53.svg\";","import styled from 'styled-components';\nimport { ReactComponent as CircleIcon } from '@/assets/circle.svg';\nimport { ReactComponent as CloseIcon } from '@/assets/close.svg';\n\nconst S = {\n  Container: styled.div`\n    width: 100%;\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 16px;\n    background: white;\n    border-radius: 10px;\n  `,\n\n  Checkerboard: styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 4px;\n    width: 100%;\n    margin-bottom: 20px;\n  `,\n\n  Chess: styled.div<{ $disabled: boolean }>`\n    background: ${({ theme }) => theme.chess.normal};\n    border-radius: 16px;\n    padding: 16px;\n    aspect-ratio: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    &:hover {\n      background-color: ${({ $disabled, theme }) =>\n        $disabled ? theme.chess.normal : theme.chess.hover};\n    }\n  `,\n  CircleIcon: styled(CircleIcon)`\n    fill: white;\n    width: 80%;\n  `,\n\n  CloseIcon: styled(CloseIcon)`\n    fill: white;\n    width: 80%;\n  `,\n  RestartButton: styled.button`\n    background: ${({ theme }) => theme.button.normal};\n    color: ${({ theme }) => theme.color};\n    border: none;\n    border-radius: 10px;\n    width: 33%;\n    padding: 10px 16px;\n    display: block;\n    margin: 10px auto;\n    &:hover {\n      background-color: ${({ theme }) => theme.button.hover};\n    }\n  `,\n  ToggleModeButton: styled.button`\n    background: ${({ theme }) => theme.button.normal};\n    color: ${({ theme }) => theme.color};\n    border: none;\n    border-radius: 10px;\n    width: 33%;\n    padding: 10px 16px;\n    display: block;\n    margin: 10px auto;\n    &:hover {\n      background-color: ${({ theme }) => theme.button.hover};\n    }\n  `,\n};\n\nexport default S;\n","import { useEffect, useMemo, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Socket, io } from 'socket.io-client';\nimport { RolesEnum, reducer, ticTacToeInitState } from './reducer';\nimport InfoSection from '@/pages/Home/InfoSection';\nimport S from './style';\nimport { ChessDownParams, JoinRoomParams, StatusEnum } from './type';\n\nconst CHESS_COUNTS = 9;\nconst chessNumbers = [...Array(CHESS_COUNTS)].map((_, i) => i + 1);\n\nfunction Home() {\n  const [state, dispatch] = useReducer(reducer, ticTacToeInitState);\n  const { roomId } = useParams();\n  const {\n    currentRole,\n    currentRound,\n    isPlayerOneWin,\n    isPlayerTwoWin,\n    playOneChess,\n    playTwoChess,\n    mode,\n    ws,\n  } = state;\n\n  const isMultiPlayerMode = mode === 'multi';\n  const isSomeoneWin = isPlayerOneWin || isPlayerTwoWin;\n  const isTie = playOneChess.length + playTwoChess.length === CHESS_COUNTS;\n  const isGameOver = isSomeoneWin || isTie;\n\n  const winStatus: StatusEnum = useMemo(() => {\n    if (isTie) return StatusEnum.IS_TIE;\n    if (isPlayerOneWin) return StatusEnum.PLAYER_ONE_WIN;\n    if (isPlayerTwoWin) return StatusEnum.PLAYER_TWO_WIN;\n    return StatusEnum.IS_GAME_PROCESSING;\n  }, [isPlayerOneWin, isPlayerTwoWin, isTie]);\n\n  const handleChessClick = (chessNumber: number, disabled: boolean) => {\n    if (isGameOver || disabled) return;\n    if (isMultiPlayerMode) {\n      ws!.emit('chessDown', roomId, chessNumber);\n    } else {\n      dispatchChessAction(currentRole, chessNumber);\n    }\n  };\n\n  const restartGame = () => {\n    if (isMultiPlayerMode) {\n      ws?.emit('restart', roomId);\n    }\n    dispatch({ type: 'RESTART_GAME' });\n  };\n\n  const dispatchChessAction = (role: RolesEnum, chessNumber: number) => {\n    if (role === RolesEnum.PLAYER_ONE) {\n      dispatch({ type: 'SET_PLAYER_ONE_CHESS', payload: chessNumber });\n    } else {\n      dispatch({ type: 'SET_PLAYER_TWO_CHESS', payload: chessNumber });\n    }\n  };\n\n  const initWebSocket = (socket: Socket) => {\n    // 對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    if (socket) {\n      socket.on('join', ({ isSuccess, playerIndex }: JoinRoomParams) => {\n        if (typeof playerIndex === 'undefined' || !isSuccess) return;\n        dispatch({ type: 'SET_ROLE', payload: playerIndex });\n        console.log('join', { isSuccess, playerIndex });\n      });\n      socket.on('chessDown', ({ chessIndex, playerIndex }: ChessDownParams) => {\n        console.log('chessDown', { chessIndex, playerIndex });\n        dispatchChessAction(playerIndex, chessIndex);\n      });\n      socket.on('restart', () => {\n        restartGame();\n      });\n    }\n  };\n\n  useEffect(() => {\n    let socket: Socket;\n    if (roomId) {\n      socket = io('http://localhost:3000');\n      socket.on('connect', () => {\n        socket.emit('join', roomId);\n      });\n      initWebSocket(socket);\n      dispatch({ type: 'SET_SOCKET', payload: socket });\n      dispatch({ type: 'CHANGE_MODE', payload: 'multi' });\n    }\n    return () => {\n      if (socket) {\n        socket.emit('disconnect', roomId);\n      }\n    };\n  }, [roomId]);\n\n  const handleModeChange = () => {\n    const nextMode = isMultiPlayerMode ? 'multi' : 'single';\n    dispatch({ type: 'CHANGE_MODE', payload: nextMode });\n  };\n\n  return (\n    <S.Container>\n      <InfoSection\n        currentRole={currentRole}\n        currentRound={currentRound}\n        isGameOver={isGameOver}\n        winStatus={winStatus}\n      />\n      <S.ToggleModeButton onClick={handleModeChange}>\n        {isMultiPlayerMode ? '多人模式' : '單人模式'}\n      </S.ToggleModeButton>\n      <S.Checkerboard>\n        {chessNumbers.map((number) => {\n          const hasSelfPlayerChess = playOneChess.includes(number);\n          const hasOtherPlayerChess = playTwoChess.includes(number);\n          const disabled =\n            hasSelfPlayerChess ||\n            hasOtherPlayerChess ||\n            isGameOver ||\n            currentRole !== currentRound;\n\n          return (\n            <S.Chess\n              key={number}\n              onClick={() => handleChessClick(number, disabled)}\n              $disabled={disabled}\n            >\n              {hasSelfPlayerChess && <S.CircleIcon />}\n              {hasOtherPlayerChess && <S.CloseIcon />}\n            </S.Chess>\n          );\n        })}\n      </S.Checkerboard>\n      <S.RestartButton onClick={restartGame}>Restart Game</S.RestartButton>\n    </S.Container>\n  );\n}\n\nexport default Home;\n"],"names":["WIN_STATUS_LIST","RolesEnum","ticTacToeInitState","currentRole","PLAYER_ONE","currentRound","playOneChess","playTwoChess","playOneRemainSteps","playTwoRemainSteps","isPlayerOneWin","isPlayerTwoWin","isGameEnd","mode","ws","getRemainSteps","chesses","map","winStatus","filter","chessNumber","includes","isSomeoneWin","remainSteps","some","steps","length","reducer","produce","draft","action","type","push","payload","PLAYER_TWO","StatusEnum","_ref","description","useMemo","isSelf","roleName","isTie","IS_TIE","PLAYER_ONE_WIN","PLAYER_TWO_WIN","_jsxs","StyledInfoText","children","_jsx","StyledTitle","styled","div","withConfig","displayName","h1","_path","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","SvgCircle","ref","title","titleId","props","xmlns","viewBox","id","d","ForwardRef","forwardRef","SvgClose","Container","Checkerboard","Chess","theme","chess","normal","_ref2","$disabled","hover","CircleIcon","CloseIcon","RestartButton","button","_ref3","_ref4","color","_ref5","ToggleModeButton","_ref6","_ref7","_ref8","chessNumbers","Array","_","state","dispatch","useReducer","roomId","useParams","isMultiPlayerMode","isGameOver","IS_GAME_PROCESSING","restartGame","emit","dispatchChessAction","role","useEffect","socket","io","on","isSuccess","playerIndex","console","log","chessIndex","initWebSocket","S","InfoSection","onClick","handleModeChange","number","hasSelfPlayerChess","hasOtherPlayerChess","disabled","handleChessClick"],"sourceRoot":""}