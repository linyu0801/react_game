{"version":3,"file":"js/177.f1f5920e.chunk.js","mappings":"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","sources":["webpack://react_game/./node_modules/engine.io-parser/build/esm/commons.js","webpack://react_game/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://react_game/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://react_game/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://react_game/./node_modules/engine.io-parser/build/esm/index.js","webpack://react_game/./node_modules/@socket.io/component-emitter/index.mjs","webpack://react_game/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://react_game/./node_modules/engine.io-client/build/esm/util.js","webpack://react_game/./node_modules/engine.io-client/build/esm/transport.js","webpack://react_game/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://react_game/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://react_game/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://react_game/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://react_game/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://react_game/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://react_game/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://react_game/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://react_game/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://react_game/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://react_game/./node_modules/engine.io-client/build/esm/socket.js","webpack://react_game/./node_modules/engine.io-client/build/esm/index.js","webpack://react_game/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://react_game/./node_modules/socket.io-parser/build/esm/binary.js","webpack://react_game/./node_modules/socket.io-parser/build/esm/index.js","webpack://react_game/./node_modules/socket.io-client/build/esm/on.js","webpack://react_game/./node_modules/socket.io-client/build/esm/socket.js","webpack://react_game/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://react_game/./node_modules/socket.io-client/build/esm/manager.js","webpack://react_game/./node_modules/socket.io-client/build/esm/index.js","webpack://react_game/./node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}